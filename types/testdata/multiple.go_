//
// Data types
//
// Command:
// goa

package types

import (
	goa "goa.design/goa/v3/pkg"
	"unicode/utf8"
)


type AType struct {
	Attr *string
}

type Composite struct {
	Attr *AType
	Other *OtherType
}

type OtherType struct {
	Attr string
}
// ValidateAType runs the validations defined on AType
func ValidateAType(v *AType) (err error) {
	if v.Attr != nil {
err = goa.MergeErrors(err, goa.ValidatePattern("v.attr", *v.Attr, "^[a-zA-Z0-9]*$"))
}
	return
}
// ValidateOtherType runs the validations defined on OtherType
func ValidateOtherType(v *OtherType) (err error) {
	err = goa.MergeErrors(err, goa.ValidatePattern("v.attr", v.Attr, "^[a-zA-Z0-9]*$"))
	return
}
// ValidateComposite runs the validations defined on Composite
func ValidateComposite(v *Composite) (err error) {
	if v.Attr == nil {
        err = goa.MergeErrors(err, goa.MissingFieldError("attr", "v"))
}
if v.Other == nil {
        err = goa.MergeErrors(err, goa.MissingFieldError("other", "v"))
}
if v.Attr != nil {
if err2 := ValidateAType(v.Attr); err2 != nil {
        err = goa.MergeErrors(err, err2)
}
}
if v.Other != nil {
if err2 := ValidateOtherType(v.Other); err2 != nil {
        err = goa.MergeErrors(err, err2)
}
}
	return
}


