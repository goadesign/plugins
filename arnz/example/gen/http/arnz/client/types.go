// Code generated by goa v3.19.1, DO NOT EDIT.
//
// Arnz HTTP client types
//
// Command:
// $ goa gen goa.design/plugins/v3/arnz/example/design -o
// $(GOPATH)/src/goa.design/plugins/arnz//example

package client

import (
	goa "goa.design/goa/v3/pkg"
	arnz "goa.design/plugins/v3/arnz/example/gen/arnz"
)

// CreateResponseBody is the type of the "Arnz" service "create" endpoint HTTP
// response body.
type CreateResponseBody struct {
	Action *string `form:"action,omitempty" json:"action,omitempty" xml:"action,omitempty"`
}

// ReadResponseBody is the type of the "Arnz" service "read" endpoint HTTP
// response body.
type ReadResponseBody struct {
	Action *string `form:"action,omitempty" json:"action,omitempty" xml:"action,omitempty"`
}

// UpdateResponseBody is the type of the "Arnz" service "update" endpoint HTTP
// response body.
type UpdateResponseBody struct {
	Action *string `form:"action,omitempty" json:"action,omitempty" xml:"action,omitempty"`
}

// DeleteResponseBody is the type of the "Arnz" service "delete" endpoint HTTP
// response body.
type DeleteResponseBody struct {
	Action *string `form:"action,omitempty" json:"action,omitempty" xml:"action,omitempty"`
}

// HealthResponseBody is the type of the "Arnz" service "health" endpoint HTTP
// response body.
type HealthResponseBody struct {
	Action *string `form:"action,omitempty" json:"action,omitempty" xml:"action,omitempty"`
}

// NewCreateResponseBodyOK builds a "Arnz" service "create" endpoint result
// from a HTTP "OK" response.
func NewCreateResponseBodyOK(body *CreateResponseBody) *arnz.ResponseBody {
	v := &arnz.ResponseBody{
		Action: *body.Action,
	}

	return v
}

// NewReadResponseBodyOK builds a "Arnz" service "read" endpoint result from a
// HTTP "OK" response.
func NewReadResponseBodyOK(body *ReadResponseBody) *arnz.ResponseBody {
	v := &arnz.ResponseBody{
		Action: *body.Action,
	}

	return v
}

// NewUpdateResponseBodyOK builds a "Arnz" service "update" endpoint result
// from a HTTP "OK" response.
func NewUpdateResponseBodyOK(body *UpdateResponseBody) *arnz.ResponseBody {
	v := &arnz.ResponseBody{
		Action: *body.Action,
	}

	return v
}

// NewDeleteResponseBodyOK builds a "Arnz" service "delete" endpoint result
// from a HTTP "OK" response.
func NewDeleteResponseBodyOK(body *DeleteResponseBody) *arnz.ResponseBody {
	v := &arnz.ResponseBody{
		Action: *body.Action,
	}

	return v
}

// NewHealthResponseBodyOK builds a "Arnz" service "health" endpoint result
// from a HTTP "OK" response.
func NewHealthResponseBodyOK(body *HealthResponseBody) *arnz.ResponseBody {
	v := &arnz.ResponseBody{
		Action: *body.Action,
	}

	return v
}

// ValidateCreateResponseBody runs the validations defined on CreateResponseBody
func ValidateCreateResponseBody(body *CreateResponseBody) (err error) {
	if body.Action == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("action", "body"))
	}
	return
}

// ValidateReadResponseBody runs the validations defined on ReadResponseBody
func ValidateReadResponseBody(body *ReadResponseBody) (err error) {
	if body.Action == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("action", "body"))
	}
	return
}

// ValidateUpdateResponseBody runs the validations defined on UpdateResponseBody
func ValidateUpdateResponseBody(body *UpdateResponseBody) (err error) {
	if body.Action == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("action", "body"))
	}
	return
}

// ValidateDeleteResponseBody runs the validations defined on DeleteResponseBody
func ValidateDeleteResponseBody(body *DeleteResponseBody) (err error) {
	if body.Action == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("action", "body"))
	}
	return
}

// ValidateHealthResponseBody runs the validations defined on HealthResponseBody
func ValidateHealthResponseBody(body *HealthResponseBody) (err error) {
	if body.Action == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("action", "body"))
	}
	return
}
