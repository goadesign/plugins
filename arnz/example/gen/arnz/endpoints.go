// Code generated by goa v3.19.1, DO NOT EDIT.
//
// Arnz endpoints
//
// Command:
// $ goa gen goa.design/plugins/v3/arnz/example/design -o
// $(GOPATH)/src/goa.design/plugins/arnz//example

package arnz

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "Arnz" service endpoints.
type Endpoints struct {
	Create goa.Endpoint
	Read   goa.Endpoint
	Update goa.Endpoint
	Delete goa.Endpoint
	Health goa.Endpoint
}

// NewEndpoints wraps the methods of the "Arnz" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Create: NewCreateEndpoint(s),
		Read:   NewReadEndpoint(s),
		Update: NewUpdateEndpoint(s),
		Delete: NewDeleteEndpoint(s),
		Health: NewHealthEndpoint(s),
	}
}

// Use applies the given middleware to all the "Arnz" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Create = m(e.Create)
	e.Read = m(e.Read)
	e.Update = m(e.Update)
	e.Delete = m(e.Delete)
	e.Health = m(e.Health)
}

// NewCreateEndpoint returns an endpoint function that calls the method
// "create" of service "Arnz".
func NewCreateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Create(ctx)
	}
}

// NewReadEndpoint returns an endpoint function that calls the method "read" of
// service "Arnz".
func NewReadEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Read(ctx)
	}
}

// NewUpdateEndpoint returns an endpoint function that calls the method
// "update" of service "Arnz".
func NewUpdateEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Update(ctx)
	}
}

// NewDeleteEndpoint returns an endpoint function that calls the method
// "delete" of service "Arnz".
func NewDeleteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Delete(ctx)
	}
}

// NewHealthEndpoint returns an endpoint function that calls the method
// "health" of service "Arnz".
func NewHealthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		return s.Health(ctx)
	}
}
