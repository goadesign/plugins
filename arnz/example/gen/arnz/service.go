// Code generated by goa v3.19.1, DO NOT EDIT.
//
// Arnz service
//
// Command:
// $ goa gen goa.design/plugins/v3/arnz/example/design -o
// $(GOPATH)/src/goa.design/plugins/arnz//example

package arnz

import (
	"context"
)

// Service is the Arnz service interface.
type Service interface {
	// Create implements create.
	Create(context.Context) (res *ResponseBody, err error)
	// Read implements read.
	Read(context.Context) (res *ResponseBody, err error)
	// Update implements update.
	Update(context.Context) (res *ResponseBody, err error)
	// Delete implements delete.
	Delete(context.Context) (res *ResponseBody, err error)
	// Health implements health.
	Health(context.Context) (res *ResponseBody, err error)
}

// APIName is the name of the API as defined in the design.
const APIName = "Arnz"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "Arnz"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [5]string{"create", "read", "update", "delete", "health"}

// ResponseBody is the result type of the Arnz service create method.
type ResponseBody struct {
	Action string
}
