openapi: 3.0.3
info:
    title: The goakit example upstream service
    description: Fetcher is a service that makes GET requests to arbitrary URLs and stores the results in the downstream 'archiver' service.
    version: 0.0.1
servers:
    - url: http://localhost:80
      description: Default server for fetcher
paths:
    /fetch/{url}:
        get:
            tags:
                - fetcher
            summary: fetch fetcher
            description: Fetch makes a GET request to the given URL and stores the results in the archiver service which must be running or the request fails
            operationId: fetcher#fetch
            parameters:
                - name: url
                  in: path
                  description: URL to be fetched
                  required: true
                  schema:
                    type: string
                    description: URL to be fetched
                    example: http://lemke.org/rachael
                    format: uri
                  example: http://sipes.org/jaron
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GoaFetch'
                            example:
                                archive_href: /archive/1
                                status: 200
                "400":
                    description: 'bad_request: Bad Request response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                "500":
                    description: 'internal_error: Internal Server Error response.'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /health:
        get:
            tags:
                - health
            summary: show health
            description: Health check endpoint
            operationId: health#show
            responses:
                "200":
                    description: OK response.
                    content:
                        text/plain:
                            schema:
                                type: string
                                example: Natus beatae cupiditate impedit ad autem quis.
                            example: Doloremque quia ut nisi ea esse.
components:
    schemas:
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: false
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: false
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            example:
                fault: false
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: false
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        GoaFetch:
            type: object
            properties:
                archive_href:
                    type: string
                    description: The href to the corresponding archive in the archiver service
                    example: /archive/1
                    pattern: ^/archive/[0-9]+$
                status:
                    type: integer
                    description: HTTP status code returned by fetched service
                    example: 200
                    format: int64
                    minimum: 0
            description: FetchResponse contains the HTTP status code returned by the fetched service and the href to the archived results in the archiver service
            example:
                archive_href: /archive/1
                status: 200
            required:
                - status
                - archive_href
tags:
    - name: health
    - name: fetcher
